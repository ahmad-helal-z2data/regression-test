<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="20" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[test message]]>
    </line>
  </reporter-output>
  <suite started-at="2023-05-21T09:09:19 EET" name="z2 test Regression suite" finished-at="2023-05-21T09:09:25 EET" duration-ms="6606">
    <groups>
      <group name="Login.login">
        <method signature="Login.user_logged()[pri:0, instance:test.Login@31c88ec8]" name="user_logged" class="test.Login"/>
      </group> <!-- Login.login -->
    </groups>
    <test started-at="2023-05-21T09:09:19 EET" name="Regression test" finished-at="2023-05-21T09:09:25 EET" duration-ms="6606">
      <class name="test.Main3">
        <test-method signature="Class_1_test_1()[pri:0, instance:test.Main3@1cbbffcd]" started-at="2023-05-21T09:09:19 EET" name="Class_1_test_1" finished-at="2023-05-21T09:09:25 EET" duration-ms="6347" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.126)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f9bb1f81a0e8d79922a29b824fc9a17, get {url=http://www.google.com}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.126, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\AHMED~1.HEL\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:62729}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3f9bb1f81a0e8d79922a29b824fc9a17]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=113.0.5672.126)
Build info: version: '4.8.1', revision: '8ebccac989'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f9bb1f81a0e8d79922a29b824fc9a17, get {url=http://www.google.com}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 113.0.5672.126, chrome: {chromedriverVersion: 113.0.5672.63 (0e1a4471d5ae..., userDataDir: C:\Users\AHMED~1.HEL\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:62729}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3f9bb1f81a0e8d79922a29b824fc9a17
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:297)
at test.Main3.Class_1_test_1(Main3.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
            <line>
              <![CDATA[test message]]>
            </line>
          </reporter-output>
        </test-method> <!-- Class_1_test_1 -->
      </class> <!-- test.Main3 -->
      <class name="test.Class3">
        <test-method is-config="true" signature="setup01()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup01" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup01 -->
        <test-method is-config="true" signature="setup02()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup02" finished-at="2023-05-21T09:09:19 EET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup02 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_03_test_01(java.lang.String)[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="Class_03_test_01" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_03_test_01 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_03_test_02(java.lang.String)[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="Class_03_test_02" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_03_test_02 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_03_test_03(java.lang.String)[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="Class_03_test_03" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_03_test_03 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_03_test_04(java.lang.String)[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="Class_03_test_04" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_03_test_04 -->
        <test-method is-config="true" signature="quit()[pri:0, instance:test.Class3@72f926e6]" started-at="2023-05-21T09:09:19 EET" name="quit" finished-at="2023-05-21T09:09:19 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- test.Class3 -->
      <class name="test.Class2">
        <test-method is-config="true" signature="setup01()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup01" finished-at="2023-05-21T09:09:19 EET" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup01 -->
        <test-method is-config="true" signature="setup02()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup02" finished-at="2023-05-21T09:09:19 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup02 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_02_test_01(java.lang.String)[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="Class_02_test_01" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_02_test_01 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_02_test_02(java.lang.String)[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="Class_02_test_02" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_02_test_02 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_02_test_03(java.lang.String)[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="Class_02_test_03" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_02_test_03 -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="setup" finished-at="2023-05-21T09:09:19 EET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Class_02_test_04(java.lang.String)[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="Class_02_test_04" finished-at="2023-05-21T09:09:19 EET" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[default page]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_02_test_04 -->
        <test-method is-config="true" signature="quit()[pri:0, instance:test.Class2@4ac3c60d]" started-at="2023-05-21T09:09:19 EET" name="quit" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- test.Class2 -->
      <class name="test.Class4">
        <test-method signature="Class_04_test_01()[pri:0, instance:test.Class4@3daa422a]" started-at="2023-05-21T09:09:19 EET" name="Class_04_test_01" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_04_test_01 -->
        <test-method signature="Class_04_test_02()[pri:0, instance:test.Class4@3daa422a]" started-at="2023-05-21T09:09:19 EET" name="Class_04_test_02" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_04_test_02 -->
        <test-method signature="Class_04_test_03()[pri:0, instance:test.Class4@3daa422a]" started-at="2023-05-21T09:09:19 EET" name="Class_04_test_03" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_04_test_03 -->
        <test-method signature="Class_04_test_04()[pri:0, instance:test.Class4@3daa422a]" started-at="2023-05-21T09:09:19 EET" name="Class_04_test_04" finished-at="2023-05-21T09:09:19 EET" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at test.Class4.Class_04_test_04(Class4.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_04_test_04 -->
      </class> <!-- test.Class4 -->
      <class name="test.class1">
        <test-method signature="Class_01_test_01(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_01" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first Object ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_01 -->
        <test-method signature="Class_01_test_01(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_01" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[second Object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_01 -->
        <test-method signature="Class_01_test_02(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_02" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first Object ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_02 -->
        <test-method signature="Class_01_test_02(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_02" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[second Object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_02 -->
        <test-method signature="Class_01_test_03(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_03" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first Object ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_03 -->
        <test-method signature="Class_01_test_03(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_03" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[second Object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_03 -->
        <test-method signature="Class_01_test_04(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_04" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first Object ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_04 -->
        <test-method signature="Class_01_test_04(java.lang.String)[pri:0, instance:test.class1@39529185]" started-at="2023-05-21T09:09:19 EET" name="Class_01_test_04" data-provider="page-to-test" finished-at="2023-05-21T09:09:19 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[second Object]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Class_01_test_04 -->
      </class> <!-- test.class1 -->
      <class name="test.Login">
        <test-method signature="user_logged()[pri:0, instance:test.Login@31c88ec8]" started-at="2023-05-21T09:09:19 EET" name="user_logged" finished-at="2023-05-21T09:09:19 EET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_logged -->
      </class> <!-- test.Login -->
    </test> <!-- Regression test -->
  </suite> <!-- z2 test Regression suite -->
</testng-results>
